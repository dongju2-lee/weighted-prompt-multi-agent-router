"""
프롬프트 생성 모듈 (음식 추천 에이전트 버전)
"""
from typing import Dict


def generate_supervisor_prompt(user_query: str, normalized_ratios: Dict[str, float], total_traces: int) -> str:
    """
    과거 패턴 데이터를 기반으로 한 슈퍼바이저 프롬프트 생성 (음식 추천 에이전트)
    """
    return f"""
당신은 음식 추천 멀티 에이전트 시스템의 라우팅 담당자입니다.

사용자 질문: "{user_query}"

다음 4개의 음식 추천 에이전트 중 하나를 선택해야 합니다:
1. 냉장고_재료_에이전트: 집에 있는 재료로 만들 수 있는 요리 추천
2. 음식점_추천_에이전트: 외식 장소 및 맛집 추천  
3. 레시피_검색_에이전트: 상세한 요리법과 레시피 제공
4. 건강식_컨설팅_에이전트: 건강과 다이어트를 고려한 음식 추천

과거 패턴 데이터 (총 {total_traces}회 추적):
- 냉장고_재료_에이전트: {normalized_ratios.get('냉장고_재료_에이전트', 0):.1%}
- 음식점_추천_에이전트: {normalized_ratios.get('음식점_추천_에이전트', 0):.1%}
- 레시피_검색_에이전트: {normalized_ratios.get('레시피_검색_에이전트', 0):.1%}
- 건강식_컨설팅_에이전트: {normalized_ratios.get('건강식_컨설팅_에이전트', 0):.1%}

사용자의 질문을 분석하고 과거 패턴을 참고하여 가장 적합한 에이전트를 선택하세요.

응답 형식:
선택된 에이전트: [에이전트명]
선택 이유: [구체적인 이유]

반드시 다음 중 하나의 정확한 에이전트명을 사용하세요:
- 냉장고_재료_에이전트
- 음식점_추천_에이전트  
- 레시피_검색_에이전트
- 건강식_컨설팅_에이전트
"""


def get_welcome_message() -> str:
    """환영 메시지 반환"""
    return """======================================================================
🍽️  가중치 기반 프롬프트 멀티 에이전트 라우터
🤖  Powered by Vertex AI Gemini
======================================================================

🔥 시스템 특징:
• Vertex AI Gemini 2.0 Flash 모델 사용
• 과거 라우팅 패턴 기반 지능형 에이전트 선택
• 실시간 가중치 조정으로 A/B 테스트 지원

🤖 사용 가능한 에이전트:
• 냉장고 재료 에이전트: 집에 있는 재료로 요리 추천
• 음식점 추천 에이전트: 외식 장소 추천
• 레시피 검색 에이전트: 상세한 요리법 제공
• 건강식 컨설팅 에이전트: 건강 목적 음식 추천

💡 예시 질문:
- '집에서 만들 수 있는 요리 추천해줘'
- '맛있는 음식점 추천해줄래?'
- '김치볶음밥 레시피 알려줘'
- '다이어트에 좋은 음식 추천해줘'
- '오늘 저녁 뭐 먹지?'

⚙️  환경 설정:
GCP_PROJECT_ID와 GCP_VERTEXAI_LOCATION을 .env 파일에 설정해주세요.

종료하려면 'quit' 또는 'exit'를 입력하세요.
----------------------------------------------------------------------"""


def get_agent_descriptions() -> Dict[str, str]:
    """에이전트별 상세 설명 반환"""
    return {
        "냉장고_재료_에이전트": "집에 있는 재료를 활용해서 만들 수 있는 요리를 추천합니다.",
        "음식점_추천_에이전트": "외식을 위한 맛집과 음식점을 추천합니다.",
        "레시피_검색_에이전트": "특정 음식의 상세한 조리법과 레시피를 제공합니다.",
        "건강식_컨설팅_에이전트": "건강과 다이어트를 고려한 음식을 추천합니다."
    } 